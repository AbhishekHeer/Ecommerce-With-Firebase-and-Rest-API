.sk_live_94df1eef-8b10-4d72-ba4a-b8c0a533fac6-NcSXwg25APvwlvHsgaX-c0188bd6-8e8c-464e-b212-289884720078.


adb 
// api

https://dummyjson.com/products

//andorid connect 

adb connect 192.168.43.138

adb tcpip 5555


mine address


adb connect 192.168.43.240
adb connect 56.185.225.76
adb connect 25.28.168.68


keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey -storepass android -keypass android





      
keytool -exportcert -alias androiddebugkey -keystore "C:\Users\deepa\.android\debug.keystore" | "C:\Users\deepa\Pictures\cash\fb\bin\openssl" sha1 -binary | "C:\Users\deepa\Pictures\cash\fb\bin\openssl.exe" base64
      


      
keytool -exportcert -alias androiddebugkey -keystore "C:\Users\deepa\.android\debug.keystore" | C:\Users\deepa\Pictures\cash\fb sha1 -binary | C:\Users\deepa\Pictures\cash\fb\bin base64
      





      
keytool -exportcert -alias androiddebugkey -keystore "C:\Users\deepa\.android\debug.keystore" | "C:\Users\deepa\Pictures\cash\fb\bin\openssl" sha1 -binary | "C:\Users\deepa\Pictures\cash\fb\bin\openssl" base64
      

      



sha256
bc:c4:f4:4f:81:3a:55:f6:d4:5d:0d:31:b1:9c:1d:5f:bc:14:35:3e:50:1c:43:31:92:1a:46:95:a7:03:74:ac

sha1
ff:6b:f8:5b:a1:8a:5a:bf:7b:99:00:8b:21:db:ca:b2:24:cf:f2:58











rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {

    // This rule allows anyone with your Storage bucket reference to view, edit,
    // and delete all data in your Storage bucket. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Storage bucket will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Storage bucket will be denied until you Update
    // your rules
    match /{allPaths=**} {
      allow read, write: if request.time < timestamp.date(2023, 9, 12);
    }
  }
}





rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read, write: if true;
    }
  }
}








fb sha key 


oZrDHMQVF3GVodrgoNkoz9ZydNo=